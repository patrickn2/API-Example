# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  database:
    image: postgres:latest
    ports:
      - "5432:5432"
    volumes:
      - ./.docker_volumes/data/:/var/lib/postgresql/data/
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - .env
    networks:
      - postgres-network
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "--username=${POSTGRES_USER}",
          "--dbname=${POSTGRES_DB}",
        ]
      interval: 10s
      retries: 5
      start_period: 20s
      timeout: 10s
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - 80:80
    env_file:
      - .env
    depends_on:
      - database
    networks:
      - postgres-network
    volumes:
      - ./.docker_volumes/pgadmin-data/:/var/lib/pgadmin/
  server:
    build:
      context: .
      target: final
    env_file:
      - .env
    environment:
      - POSTGRES_HOSTNAME=database
    depends_on:
      database:
        condition: service_healthy
        restart: true
    ports:
      - 8080:8080
    networks:
      - postgres-network
networks:
  postgres-network:
    driver: bridge
